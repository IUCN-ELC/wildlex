name: Release DockerHub test image

on:
  push:
    branches:
      - test

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_REPOSITORY }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Check out repository
        uses: actions/checkout@v2
      -
        name: Build image
        run: |
          ls -lsah
          pwd
          docker build . --file .docker/app/Dockerfile --tag $IMAGE_NAME
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Push image
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          docker tag $IMAGE_NAME $IMAGE_NAME:$VERSION
          docker push $IMAGE_NAME:$VERSION
  deploy:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          cat >>~/.ssh/config <<END
          Host testinstance
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/id_rsa
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.TEST_SSH_USER }}
          SSH_KEY: ${{ secrets.TEST_SSH_KEY }}
          SSH_HOST: ${{ secrets.TEST_SSH_HOST }}
      - name: Fetch latest image
        run: ssh testinstance 'cd /var/local/wildlex-test/ && sudo docker-compose pull'
      - name: Restart the app container
        run: ssh testinstance 'cd /var/local/wildlex-test/ && sudo /usr/bin/docker-compose restart app'
      - name: Deploy the updates
        run: ssh testinstance 'sudo /usr/bin/docker exec -ti ${{ secrets.TEST_APP_CONTAINER_NAME }} ./vendor/bin/robo site:update'